@using SmartTouch.CRM.ApplicationServices.ViewModels
@model ReportViewModel

@{
    ViewBag.Title = "Saved Searches";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var DateFormat = ViewBag.DateFormat;
    short ItemsPerPage = ViewBag.ItemsPerPage;
}

@*<script src="~/Scripts/ViewModels/BDXContactsViewModel.js"></script>*@
@Scripts.Render("~/bundles/bdxFreemiumCustomLeadReportvm")
<div style="display:none" data-bind="visible:true">
    <div>
        <div class="sub-container">
            <ul class="breadcrumb mbl">
                <li><a href="/reports">[|Reports|]</a></li>
                <li class="active"><a href="javascript:void(0)" data-bind="text:ReportName()"></a></li>
            </ul>
            <div class="main-header mbl">
                <span id="pagename" data-bind="text:ReportName()"></span>
            </div>
            <div class="form-horizontal-large">
                <div class="clearfix">
                    <div class="form-group">
                        <label class="display-inline bold">[|Date Range|]</label>
                        <input class="select-block" data-bind="kendoDropDownList: {dataTextField:'PeriodText',dataValueField:'periodID', data: Periods ,value:periodID,change:periodChange}" />
                    </div>
                </div>
                <div class="clearfix">
                    <div class="form-group" data-bind="visible:CustomDateDisplay">
                        <label class="bold">[|Custom Range|]:</label>
                        <div class="select-medium display-inline">
                            <input data-bind="kendoDatePicker: { value: CustomStartDate, max: fromMaxDate,format:DateFormat,change: fromDateChangeEvent }" />
                        </div>
                        <label class="display-inline mts mhl">[|To|]</label>
                        <div class="select-medium display-inline">
                            <input data-bind="kendoDatePicker: { value: CustomEndDate, max: toMaxDate,format:DateFormat,change: toDateChangeEvent }" />
                        </div>
                    </div>
                </div>
                <div class="hr-border"></div>
                <div>
                    <a href="#" id="run-report" data-bind="click:Runlist" class="btn btn-lg btn-primary">[|Run Report|]</a>
                </div>
            </div>
            
            <div class="k-grid k-widget k-secondary no-grid-resize mtl" id="grid1" data-bind="visible: gridvisible() =='True'">
                @*<div class="clearfix mbl" data-bind="visible:TotalHits()>0">*@
                <div class="clearfix mbl">
                    <span class="pull-right ">
                        <a data-posturl="savedserches" href="#" onclick="advanceView();" class="btn btn-lg btn-primary">[|Advanced View|]</a>
                    </span>
                </div>
                @(Html.Kendo().Grid<SmartTouch.CRM.ApplicationServices.ViewModels.ContactReportEntry>()
                    .Name("contactList")
                            .HtmlAttributes(new { @class = "k-grid-content" })
                    .AutoBind(false)
                    .Pageable(pageable => pageable
                        .PageSizes(true)
                        .ButtonCount(10).Messages(m => m
                        .Display("[|Showing|] {0}-{1} [|from|] {2:n0} [|Contacts|]")
                        .Empty("[|No Contacts to Display|]")
                        .ItemsPerPage("[|Contacts Per Page|]")))
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.Name).Title("[|Name|]").HeaderHtmlAttributes(new { @class = "col-25" });
                        columns.Bound(p => p.PrimaryEmail).Title("[|Primary Email|]").HeaderHtmlAttributes(new { @class = "col-25" });
                        columns.Bound(p => p.Phone).Title("[|Phone|]").HeaderHtmlAttributes(new { @class = "col-15" });
                        columns.Bound(p => p.OwnerName).Title("[|Owner Name|]").HeaderHtmlAttributes(new { @class = "col-20" });
                        columns.Bound(p => p.CreatedOn).Title("[|Created On|]").HeaderHtmlAttributes(new { @class = "col-15" });
                    }).ClientRowTemplate(@"<tr class='odd'><td > #if(ContactType===1)
                                   {#
                                        <a href='/person/#:ContactID#'>#=displayName(Name,PrimaryEmail)#</a>
                                   #}
                                else
                                  {#
                                        <a href='/company/#:ContactID#'>#=displayName(Name,PrimaryEmail)#</a>
                                  #}#</td><td>#:PrimaryEmail#</td><td>#:Phone#</td>" +
                                                                                    "<td>#:OwnerName#</td><td>#=displayDate_n(CreatedOn)#</td></tr>")
                    .Events(events => events.DataBinding("onDataBinding").DataBound("onDataBound"))
                    .DataSource(dataSource => dataSource
                        .Ajax()
                         .PageSize(ItemsPerPage)
                        .Read(read => read.Action("ExcelRead_NewLeadsReport", "Reports"))
                    )
                )
                <div class="hr-border"></div>
                <div>
                    <a data-posturl="savedserches" href="#" onclick="advanceView();" class="btn btn-lg btn-primary">[|Advanced View|]</a>

                </div>
            </div>


        </div>
    </div>
</div>



<script type="text/javascript">
    var BASE_URL = '@Url.Content("~/Reports/")';
    var BDXContactsList = @(Html.Raw(Json.Encode(Model)));
    var ContactUrl =  '@Url.Content("~/Contact/")';
    var dateformat = '@(DateFormat)';
    var itemsPerPage = '@(ItemsPerPage)';
    var viewModel;
    function displayDate_n(date) {
        if (date == null) {
            return "";
        }
        return kendo.toString(kendo.parseDate(date, 'yyyy/MM/dd'), '@(DateFormat)');
    }

    function onDataBinding(arg) {

    }

    function displayName(Name,PrimaryEmail) {
        if (Name ==" " )
            return PrimaryEmail;
        else
            return Name;
    }

    function onDataBound(e) {
        var colCount = $(".k-grid").find('table colgroup > col').length;
        var dataSource = new kendo.data.DataSource({
            data: ToPageDropdown()
        });
        $("select[data-role='dropdownlist']").data('kendoDropDownList').setDataSource(dataSource);
        if (e.sender.dataSource.view().length == 0) {
            e.sender.table.find('tbody').append('<tr><td colspan="' + colCount +'"><div class="notecordsfound"><div><i class="icon st-icon-browser-windows-2"></i></div><span class="bolder smaller-90">[|No Records Found|]</span></div></td></tr>')
        }
    }

    $(document).ready(function () {
         viewModel = new bdxContactsViewModel(BDXContactsList,BASE_URL,dateformat,itemsPerPage);
        ko.applyBindings(viewModel);
    });

    function RunReport(){
        selfBDXReport.Runlist();
    }
    function advanceView()
    {
        var contactIds_Guid=$.cookie("ContactsGuid");
        console.log(contactIds_Guid);
        localStorage.setItem("ContactsGuid",contactIds_Guid );
        window.location.href = '../reportcontacts?guid=' + contactIds_Guid + '&reportType=11&reportId='+viewModel.ReportId();
    }

</script>




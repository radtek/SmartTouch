@using SmartTouch.CRM.ApplicationServices.ViewModels
@model ReportViewModel
@using System.Threading
@using System.Linq;
@using System.Web.Mvc
@using SmartTouch.CRM.Web.Utilities
@using SmartTouch.CRM.Entities
<meta charset="utf-8">
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var DateFormat = ViewBag.DateFormat;
    var IsType = ViewBag.IsType;
    var IsLifeCycle = ViewBag.IsLifeCycle;
    var IsPipeline = ViewBag.IsPipeline;
    var IsSource = ViewBag.IsSource;
    var IsTypeAndLifecycle = ViewBag.IsTypeAndLifecycle;
    var IsActivity = ViewBag.IsActivity;
    bool runReportResults = ViewBag.RunReportResults;
    short ItemsPerPage = ViewBag.ItemsPerPage;
    List<AppModules> appModules = new List<AppModules>();
    appModules.Add(AppModules.Reports);
    appModules.Add(AppModules.ContactActions);
    appModules.Add(AppModules.Campaigns);
    appModules.Add(AppModules.Contacts);
    appModules.Add(AppModules.ContactTours);
    appModules.Add(AppModules.Opportunity);
    appModules.Add(AppModules.Forms);
    appModules.Add(AppModules.ContactNotes);
    appModules.Add(AppModules.LeadScore);
    var Permissions = MenuHelper.CheckPermission(appModules);
}
@Scripts.Render("~/bundles/editreportvm")
<div style="display:none" data-bind="visible:true">
    <section>
        <div class="sub-container" id="Pipeline">
            <ul class="breadcrumb mbl">
                <li><a href="/reports">[|Reports|]</a></li>
                <li class="active"><a href="javascript:void(0)" data-bind="text:ReportName()"></a></li>
            </ul>
            <div class="main-header mbl">                
                 <span id="pagename" data-bind="text:ReportName()"></span>
            </div>

            <div class="form-horizontal-large mtl">
                <div class="clearfix">
                    <div class="form-group">
                        <label class="display-inline bold">[|Date Range|]</label>
                        <input class="select-block" data-bind="kendoDropDownList: {dataTextField:'Period',dataValueField:'PeriodId', data: Periods ,value:PeriodId,change:periodChange}" />
                    </div>
                </div>
                @if (IsPipeline == true)
                {
                    <div class="clearfix">
                        <div class="form-group" data-bind="visible:CustomDateDisplay">
                            <label class="bold">[|Custom Range|] :</label>
                            <div class="select-medium display-inline">
                                <input data-bind="kendoDatePicker: { value: CustomStartDate, format:DateFormat,change: fromDateChangeEvent }" />
                            </div>
                            <label class="display-inline mts mhl">[|To|]</label>
                            <div class="select-medium display-inline">
                                <input data-bind="kendoDatePicker: { value: CustomEndDate,format:DateFormat,change: toDateChangeEvent }" />
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="clearfix">
                        <div class="form-group" data-bind="visible:CustomDateDisplay">
                            <label class="bold">[|Custom Range|] :</label>
                            <div class="select-medium display-inline">
                                <input data-bind="kendoDatePicker: { value: CustomStartDate, max: fromMaxDate,format:DateFormat,change: fromDateChangeEvent }" />
                            </div>
                            <label class="display-inline mts mhl">[|To|]</label>
                            <div class="select-medium display-inline">
                                <input data-bind="kendoDatePicker: { value: CustomEndDate, max: toMaxDate,format:DateFormat,change: toDateChangeEvent }" />
                            </div>
                        </div>
                    </div>
                }
               

                @if (IsType == true || IsLifeCycle == true || IsSource == true || IsTypeAndLifecycle == true)
                {
                    <label class="form-group comparision" data-bind="attr: {'class': IsCompared() ?'checkbox checked':'checkbox' },visible: campareToVisible() =='True'">
                        <input type="checkbox" data-toggle="checkbox" data-bind="checked:IsCompared, click:setCompareTo">
                        [|Compare To|]
                    </label>
                <!-- ko if: IsCompared() === true -->
                    <div class="form-group medium compare">
                        <input class="select-block" data-bind="kendoDropDownList: {dataTextField:'Previous',dataValueField:'PreviousId', data: ComparedTo ,value:PreviousId}" />
                    </div>
                <!-- /ko -->
                }

                @if (IsActivity == true)
                {
                    <div class="clearfix">
                        <div class="form-group group-by0">
                            <label class="display-inline bold">[|Account Executive|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'OwnerName',dataValueField:'OwnerId', data: Users, value: OwnerId ,itemTemplate: templ,optionLabel: '[|Select...|]',placeholder:'[|All|]'}" class="multiselectwidth"></select>
                        </div>
                    </div>
                }
                else
                {
                    <div class="clearfix">
                        <div class="form-group">
                            <label class="display-inline bold">[|Group By|]</label>
                            <input id="groupby-hiding" class="select-block" data-bind="kendoDropDownList: {dataTextField:'Group',dataValueField:'GroupId', data: Groups ,value: GroupId,change : groupChange}" />

                        </div>
                    </div>
                    <div class="clearfix" data-bind="visible: accountExecVisible() =='True'">
                        <div class="form-group group-by0">
                            <label class="display-inline bold">[|Account Executive|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'OwnerName',dataValueField:'OwnerId', data: Users, value: OwnerId,itemTemplate: templ ,optionLabel: '[|Select...|]',placeholder:'[|All|]'}" class="multiselectwidth"></select>
                            <span class="help-block">Note: Red color represents deleted users.</span>
                        </div>
                    </div>
                    <div class="clearfix" data-bind="visible: communityVisible() =='True'">
                        <div class="form-group group-by1">
                            <label class="display-inline bold">[|Community|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'DropdownValue',dataValueField:'DropdownValueID', data: Communities, value: Community ,optionLabel: '[|Select...|]',placeholder:'[|All|]'}" class="multiselectwidth"></select>
                        </div>
                    </div>

                }

                @if (IsPipeline == true)
                {
                    <div class="clearfix">
                        <div class="form-group">
                            <label class="display-inline bold">[|Opportunity Stage|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'DropdownValue',dataValueField:'DropdownValueID', data: OpportunityStages, value: OpportunityStage ,optionLabel: '[|Select...|]',placeholder:'[|All|]'}" class="multiselectwidth"></select>
                        </div>
                    </div>
                }
                else if (IsType == true)
                {
                    <div class="clearfix">
                        <div class="form-group">
                            <label class="display-inline bold">[|Type|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'DropdownValue',dataValueField:'DropdownValueID', data: TourTypes, value: TourType ,optionLabel: '[|Select...|]',placeholder:'[|All|]'}" class="multiselectwidth"></select>
                        </div>
                    </div>
                }
                else if (IsLifeCycle == true)
                {
                    <div class="clearfix">
                        <div class="form-group">
                            <label class="display-inline bold">[|Life Cycle|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'DropdownValue',dataValueField:'DropdownValueID', data: LifecycleStages, value: LifecycleStage ,optionLabel: '[|Select...|]',placeholder:'[|All|]'}" class="multiselectwidth"></select>
                        </div>
                    </div>
                }
                else if (IsSource == true)
                {
                    <div class="clearfix">
                        <div class="form-group">
                            <label class="display-inline bold">[|Traffic Source|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'DropdownValue',dataValueField:'DropdownValueID', data: LeadSources, value: LeadSource ,optionLabel: '[|Select...|]',placeholder:'[|All|]'}" class="multiselectwidth"></select>
                        </div>
                    </div>
                }
                else if (IsTypeAndLifecycle == true)
                {
                    <div class="clearfix">
                        <div class="form-group">
                            <label class="display-inline bold">[|Type|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'DropdownValue',dataValueField:'DropdownValueID', data: TourTypes, value: TourType ,optionLabel: '[|Select...|]',placeholder:'[|All|]'}" class="multiselectwidth"></select>
                        </div>
                    </div>
                    <div class="clearfix">
                        <div class="form-group">
                            <label class="display-inline bold">[|Life Cycle|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'DropdownValue',dataValueField:'DropdownValueID', data: LifecycleStages, value: LifecycleStage ,optionLabel: '[|Select...|]',placeholder:'[|All|]'}" class="multiselectwidth"></select>
                        </div>
                    </div>
                }
                else if (IsActivity == true)
                {
                    <div class="clearfix">
                        <div class="form-group">
                            <label class="display-inline bold">[|Activities|]</label>
                            <select data-bind="kendoMultiSelect: {dataTextField:'ActivityValue',dataValueField:'ActivityID', data: Modules, value: Module }" class="multiselectwidth"></select>
                        </div>
                    </div>
                }

                <div class="hr-border"></div>
                <div class="pull-left">
                    <a href="#" id="run-report" data-bind="click:Runlist" class="btn btn-lg btn-primary">[|Run Report|]</a>
                </div>
            </div>

            <div class="clearfix pvl smart-report" id="new-lead">

                @if (IsLifeCycle == true || IsTypeAndLifecycle == true)
                {
                    <div class="row inner-report" data-bind="visible: chartvisible() =='True'">
                        <div class="col-lg-6 col-md-6 widget" id="hstraffic1">
                            <div class="da-traffic">
                                <div class="bg-chart report-cursor" id="AreaChart"></div>
                                <div class="left-part" style="cursor: default">
                                    <div class="total" data-bind="text:CountInAreaChart"></div>
                                    <div class="title">[|Tours|]</div>
                                </div>
                                <div class="right-part" data-bind="visible:IsCompared">
                                    <!-- ko if: PreviousTotal() <=  CurrentTotal()  -->
                                    <div class="total-percent high"><span data-bind="text:Percentage()"></span><span class="">%</span> </div>
                                    <!--/ko-->
                                    <!-- ko if: PreviousTotal() >  CurrentTotal() -->
                                    <div class="total-percent low"><span data-bind="text:Percentage()"></span><span class="">%</span> </div>
                                    <!--/ko-->
                                    <div class="percent-label">Previous Period</div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6 widget">
                            <div class="da-traffic-source">
                                <div class="title">[|Top 5 Life Cycles|]</div>
                                <div class="bg-chart report-cursor" id="PieChart"></div>
                            </div>
                        </div>
                    </div>
                }



                @if (IsType == true)
                {
                    <div class="row inner-report" data-bind="visible: chartvisible() =='True'">

                        <div class="col-lg-6 col-md-6 widget">
                            <div class="da-traffic">
                                <div class="bg-chart report-cursor" id="AreaChart"></div>
                                <div class="left-part" style="cursor: default">
                                    <div class="total" data-bind="text:CountInAreaChart"></div>
                                    <div class="title">[|Tours|]</div>
                                </div>
                                <div class="right-part" data-bind="visible:IsCompared">
                                    <!-- ko if: PreviousTotal() <=  CurrentTotal()  -->
                                    <div class="total-percent high"><span data-bind="text:Percentage()"></span><span class="">%</span> </div>
                                    <!--/ko-->
                                    <!-- ko if: PreviousTotal() >  CurrentTotal() -->
                                    <div class="total-percent low"><span data-bind="text:Percentage()"></span><span class="">%</span> </div>
                                    <!--/ko-->
                                    <div class="percent-label">[|Previous Period|]</div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6 widget prn">
                            <div class="da-traffic-types">
                                <div class="bg-chart report-cursor" id="BarChart"></div>
                                <div class="left-part">
                                    <div class="title"><a>[|Tour Types|]</a></div>
                                </div>

                            </div>
                        </div>
                    </div>
                }



                @if (IsSource == true)
                {
                    <div class="row inner-report" data-bind="visible: chartvisible() =='True'">
                        <div class="col-lg-6 col-md-6 widget" id="hstraffic1">
                            <div class="da-traffic">
                                <div class="bg-chart report-cursor" id="AreaChart"></div>
                                <div class="left-part" style="cursor: default">
                                    <div class="total" data-bind="text:CountInAreaChart"></div>
                                    <div class="title">[|Tours|]</div>
                                </div>
                                <div class="right-part" data-bind="visible:IsCompared">
                                    <!-- ko if: PreviousTotal() <=  CurrentTotal()  -->
                                    <div class="total-percent high"><span data-bind="text:Percentage()"></span><span class="">%</span> </div>
                                    <!--/ko-->
                                    <!-- ko if: PreviousTotal() >  CurrentTotal() -->
                                    <div class="total-percent low"><span data-bind="text:Percentage()"></span><span class="">%</span> </div>
                                    <!--/ko-->
                                    <div class="percent-label">[|Previous Period|]</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 widget">
                            <div class="da-traffic-source">
                                <div class="title">[|Top 5 Tour Sources|]</div>
                                <div class="bg-chart report-cursor" id="PieChart"></div>
                            </div>
                        </div>
                    </div>
                }

                @if (IsPipeline == true)
                {
                    <div class="row inner-report">
                        <div class="col-sm-12"><div class="title" data-bind="visible: chartvisible() =='True'">[|Opportunity Pipeline|]</div></div>
                        <div class="col-lg-4 col-md-6 col-sm-6">
                            <div class="da-lifecycle-pipeline">
                                <div id="PipelineChart"></div>
                            </div>
                        </div>
                    </div>
                }

                <div id="resultsgrid" class="mtl no-grid-resize cu-table-responsive">
                    <table id="grid" data-bind="source: gridRows"></table>
                </div>

                <div id="noRecordsFound" style="display:none;">
                    <span>[|No records found|]</span>
                </div>

            </div>
        </div>
    </section>
</div>
<script type="text/x-kendo-template" id="template">
    <div>
        <div id="Contacts" class="no-grid-resize"></div>
    </div>
</script>

<script type="text/javascript">

    var BASE_URL = '@Url.Content("~/Reports/")';
    var pipeline = @(Html.Raw(Json.Encode(Model)));
    var ContactUrl =  '@Url.Content("~/Contact/")';
    var users = [];
    var dateformat = '@(DateFormat)';
    var IsType = '@(IsType)'; var IsLifeCycle = '@(IsLifeCycle)';var IsSource = '@(IsSource)';var IsPipeline='@(IsPipeline)';var IsTypeAndLifecycle = '@(IsTypeAndLifecycle)';
    var IsActivity = '@(IsActivity)';
    var runReport='@(runReportResults)';
    var itemsPerPage = '@(ItemsPerPage)';
    var viewModel=null;
    if(IsPipeline == 'True')
        $("#groupby-hiding").addClass('hide');

    Activities = [];  var module = ['3'];
    if ("@Permissions.Where(s => s.Module == AppModules.Contacts).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({ ActivityID: 3, ActivityValue: '[|Contacts|]' });
    if ("@Permissions.Where(s => s.Module == AppModules.Campaigns).Select(s => s.HasPermission).SingleOrDefault()" == "True")Activities.push({ ActivityID: 4, ActivityValue: '[|Campaigns|]' });
    if ("@Permissions.Where(s => s.Module == AppModules.ContactActions).Select(s => s.HasPermission).SingleOrDefault()" == "True")
    {
        Activities.push({ActivityID: 5, ActivityValue: '[|Actions|]' });
        module = ['3', '5','6','7'];
    }
    if ("@Permissions.Where(s => s.Module == AppModules.ContactNotes).Select(s => s.HasPermission).SingleOrDefault()" == "True")Activities.push({ ActivityID: 6, ActivityValue: '[|Notes|]' });
    if ("@Permissions.Where(s => s.Module == AppModules.ContactTours).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({ ActivityID: 7, ActivityValue: '[|Tours|]' });
    if ("@Permissions.Where(s => s.Module == AppModules.Forms).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({ ActivityID: 10, ActivityValue: '[|Forms|]'  });
    if ("@Permissions.Where(s => s.Module == AppModules.Opportunity).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({  ActivityID: 16, ActivityValue: '[|Opportunity|]'  });

    var Type = 'P';
    if(IsType == 'True')
        Type = 'T';
    else if(IsLifeCycle == 'True')
        Type = 'L';
    else if(IsSource == 'True')
        Type = 'S';
    else if(IsPipeline == 'True')
        Type = 'P';
    else if(IsTypeAndLifecycle == 'True')
        Type = 'C';
    else if(IsActivity == 'True')
        Type = 'A';


    var filename = "Export.xlsx";
    if (IsPipeline == 'True')
    {
        filename ="OpportunityPipeline"
    }
    else if (IsType == 'True')
    {
        filename ="ToursByType";

    }
    else if (IsLifeCycle == 'True')
    {
        filename ="ToursByLifeCycle";

    }
    else if (IsSource == 'True')
    {
        filename ="ToursBySource";

    }
    else if (IsTypeAndLifecycle == 'True')
    {
        filename ="ToursByType&LifeCycle";

    }
    else if (IsActivity == 'True')
    {
        filename ="Activity";

    }

    function myCustomFunction(columnName,reportType) {
        var startdate = viewModel.CustomStartDate();
        var enddate = viewModel.CustomEndDate();
        var items = JSON.stringify(viewModel.OwnerIds());
        if (Type == 'A' && columnName == 'Actions') {
            viewModel.ActivityModule(columnName);
            window.location.href = '../reportactions?userIds=' + items + '&StartDate=' + moment(startdate).format('MM/DD/YYYY') + '&EndDate=' + moment(enddate).format('MM/DD/YYYY');
        }
        else if(Type == 'A' && columnName == 'Opportunity'){
            viewModel.ActivityModule(columnName);
            window.location.href = '../opportunitiesreportlist?userIds=' + items + '&StartDate=' + moment(startdate).format('MM/DD/YYYY') + '&EndDate=' + moment(enddate).add(1, 'days').format('MM/DD/YYYY');
        }
        else if(Type == 'A' && columnName == 'Campaigns'){
            viewModel.ActivityModule(columnName);
            window.location.href = '../campaignsreportlist?userIds=' + items + '&StartDate=' + moment(startdate).format('MM/DD/YYYY') + '&EndDate=' + moment(enddate).add(1, 'days').format('MM/DD/YYYY');
        }
        else if(Type == 'A' && columnName == 'Forms'){
            viewModel.ActivityModule(columnName);
            window.location.href = '../formsreportlist?userIds=' + items + '&StartDate=' + moment(startdate).format('MM/DD/YYYY') + '&EndDate=' + moment(enddate).add(1, 'days').format('MM/DD/YYYY');
        }
        else{

            if(Type == 'A')
                viewModel.ActivityModule(columnName);

            if(Type == "P"){
                value = ko.utils.arrayFirst(viewModel.OpportunityStages(), function (item) {
                    if (viewModel.IsCompared() == 1)
                        columnName = columnName.replace("(c)", "").replace("(p)", "");
                    return item.DropdownValue == columnName;
                });
                if(value){
                    viewModel.OpportunityStageIds(value.DropdownValueID);
                }

            }
            else if(Type == "L" || Type == 'C'){
                value = ko.utils.arrayFirst(viewModel.BothResults(), function (item) {
                    if (selflist.IsCompared() == 1)
                        columnName = columnName.replace("(c)", "").replace("(p)", "");
                    return item.DropdownValue.toString() === columnName;
                });

                if(value){
                    viewModel.LifeStageIds(value.DropdownValueID);
                }

                if(Type == 'C')
                    viewModel.DropdownType(reportType)
            }
            else if(Type == "S"){
                value = ko.utils.arrayFirst(viewModel.LeadSources(), function (item) {
                    if (selflist.IsCompared() == 1)
                        columnName = columnName.replace("(c)", "").replace("(p)", "");
                    return item.DropdownValue.toString() === columnName;
                });

                if(value){
                    viewModel.LeadSourceIds(value.DropdownValueID);
                }
            }
            else if(Type == "T"){
                value = ko.utils.arrayFirst(viewModel.TourTypes(), function (item) {
                    if (selflist.IsCompared() == 1)
                        columnName = columnName.replace("(c)", "").replace("(p)", "");
                    return item.DropdownValue.toString() === columnName;
                });

                if(value){
                    viewModel.TourTypeIds(value.DropdownValueID);
                }
            }

            var jsondata = ko.toJSON(viewModel);

            $.ajax({
                url: BASE_URL + '/GetContacts',
                type: 'post',
                data: jsondata,
                dataType: 'json',
                contentType: "application/json; charset=utf-8"
            }).then(function (response) {
                var filter = $.Deferred();
                if (response.success) {
                    filter.resolve(response)
                } else {
                    filter.reject(response.error)
                }
                return filter.promise()
            }).done(function (response) {
                removepageloader();
                if (response != null) {
                    if (response.success == true) {
                        localStorage.setItem("ContactsGuid", response.response);
                        window.location.href = '../reportcontacts?guid=' + response.response + '&reportType=' + selflist.ReportType() + '&reportId=' + selflist.ReportId();
                    }
                }
            }).fail(function (error) {
                notifyError(error);
            });
        }
       
    }

    $(document).ready(function () {
        $(':checkbox').on('change', function () {
            $(this).triggerHandler('click');
        });

        $.ajax({
            url:'/GetUsersList',
            type: 'get',
            dataType: 'json',
            data:{ 'id': 0},
            contentType: "application/json; charset=utf-8",
        }).then(function (response) {
            var filter = $.Deferred();
            if (response.success) {
                filter.resolve(response)
            } else {
                filter.reject(response.error)
            }
            return filter.promise()
        }).done(function (data) {
            if(data.response){
                $.each(data.response,function(ind,val){
                    if(IsActivity == 'True')
                    {
                        if(val.AccountID !== 1 && val.IsDeleted == false)
                            users.push(val);
                    }
                    else
                        users.push(val);
                });
            }
           

            viewModel = new opportunityPipelineViewModel(BASE_URL,pipeline,users,dateformat,Type,runReport,itemsPerPage,Activities,module,filename);
            ko.applyBindings(viewModel);
        }).fail(function (error) {
            notifyError(error);
        });
    });
    function RunReport(){
        selflist.Runlist();
    }

</script>

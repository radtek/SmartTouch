@using SmartTouch.CRM.ApplicationServices.ViewModels
@using System.Threading
@using SmartTouch.CRM.Web.Utilities
@using System.Web.Mvc
@using SmartTouch.CRM.Entities
@model CompanyViewModel
@{
    ViewBag.Title = "Company Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var DateFormat = ViewBag.DateFormat;
    var CurrencyFormat = ViewBag.CurrencyFormat;
    var IsSendMail = ViewBag.EmailPermission != null ? ViewBag.EmailPermission : false;
    short ItemsPerPage = ViewBag.ItemsPerPage;

    List<AppModules> appModules = new List<AppModules>();
    appModules.Add(AppModules.CustomFields);
    appModules.Add(AppModules.ContactActions);
    appModules.Add(AppModules.ContactNotes);
    appModules.Add(AppModules.ContactTours);
    appModules.Add(AppModules.ContactRelationships);
    appModules.Add(AppModules.Campaigns);
    appModules.Add(AppModules.Forms);
    appModules.Add(AppModules.SendMail);
    appModules.Add(AppModules.SendText);
    var Permissions = MenuHelper.CheckPermission(appModules);
}


@Scripts.Render("~/bundles/contactsviewvm")
@Scripts.Render("~/bundles/contactsgridvm")
@Scripts.Render("~/bundles/Opportunityvm")


@using (Html.BeginForm("CompanyDetails", "Contact", FormMethod.Post,
                                      new { name = "form-data", id = "form" }))
{
    <div class="ct-details" id="companyView">
        <div class="ct-mainarea">
            <div class="ct-top-details">
                <ul class="breadcrumb ">
                    <li>@Html.ActionLink("[|Contacts|]", "ContactSearch", "Contact", null, null)</li>
                    <li class="active"><a href="javascript:void(0)">[|Company Details|]</a></li>
                </ul>


                <div class="panel contact-detail">
                    <div class="user-body row" id="appTourContactDetails">
                        <div class="col-md-8 col-lg-7">


                            <div class="profile-pic-control">

                                <div class="profile-pic">

                                    <a href="#editprofilepic" class="change-picture" data-toggle="modal">Change Picture</a>
                                    <figure><img data-bind="attr:{src: Image().ImageContent?Image().ImageContent:'/img/NoImage_company.png' }" id='contactProfileImage' /> </figure>

                                </div>

                                <div class="st-edit-profile"><a data-bind="attr: { 'href': '@Url.Action("EditCompany", "Contact")?contactId=' + ContactID() +'&contactType=2' }">[|Edit Profile|]</a></div>

                            </div>






                            <div class="user-details">
                                <div class="edit-field company-field">
                                    <div class="edit-field-label"><h6 class="mtn" data-bind="text:CompanyName"></h6> <i data-bind="click:function(){ InlineEditing(8)}" class="icon st-icon-edit"></i></div>
                                    <div class="edit-field-group">
                                        <div class="form-group">
                                            <label class="control-label">[|Company Name|]</label>
                                            <input class="form-control" data-bind="value:CompanyName" type="text" />
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">&nbsp;</label>
                                            <button data-bind="click:function(){ InlineSaving(8)}" class="btn btn-default" type="button"><i class="fui-check"></i></button>
                                            <button data-bind="click:function(){ InlineCancel(8)}" class="btn btn-default" type="button"><i class="fui-cross"></i></button>
                                        </div>
                                    </div>
                                </div>




                                <p><a data-bind="text:GetPersons(Persons()),attr: { 'href': '/integratedpersons?persons=' + IntegratedPersons() +'' }"></a></p>

                                @Html.Partial("_PrimaryContactInformation")

                                <div class="web-url-icons" data-bind="foreach: SocialMediaUrls">
                                    <!-- ko if: MediaType()=='Facebook' && URL()!="" && URL()!=null --><a data-bind="attr: { href: URL, target:'_blank' }"><i data-bind="attr: { class:'icon st-icon-facebook' }"></i></a><!--/ko-->
                                    <!-- ko if: MediaType()=='Twitter' && URL()!="" && URL()!=null --><a data-bind="attr: { href: URL, target:'_blank'}"> <i data-bind="attr: { class:'icon st-icon-twitter' }"></i></a><!--/ko-->
                                    <!-- ko if: MediaType()=='Website' && URL()!="" && URL()!=null --><a data-bind="attr: { href: URL, target:'_blank'}"> <i data-bind="attr: { class:'icon st-icon-website' }"></i></a><!--/ko-->
                                    <!-- ko if: MediaType()=='LinkedIn' && URL()!="" && URL()!=null --><a data-bind="attr: { href: URL, target:'_blank'}"> <i data-bind="attr: { class:'icon st-icon-linkedin' }"></i></a><!--/ko-->
                                    <!-- ko if: MediaType()=='Google+' && URL()!="" && URL()!=null --><a data-bind="attr: { href: URL, target:'_blank'}"> <i data-bind="attr: { class:'icon st-icon-google-plus' }"></i></a><!--/ko-->
                                    <!-- ko if: MediaType()=='Blog' && URL()!="" && URL()!=null --><a data-bind="attr: { href: URL, target:'_blank'}"> <i data-bind="attr: { class:'icon st-icon-blog' }"></i></a><!--/ko-->
                                    <!-- ko if: MediaType()=='Skype' && URL()!="" && URL()!=null --><a data-bind="attr: { href: URL, target:'_blank'}"> <i data-bind="attr: { class:'icon st-icon-skype' }"></i></a><!--/ko-->
                                </div>
                            </div>

                            <div class="clearfix"></div>

                        </div>

                        <div class="col-md-4 col-lg-5">
                            <ul class="user-counts">
                                <li class="score">
                                    <div class="label">[|Owner|]</div>
                                    <div class="status" data-bind="text:OwnerName"></div>
                                </li>
                            </ul>
                            <div class="clearfix"></div>
                        </div>
                    </div>


                    <!--end of panelbody-->
                    <div id="appTourContactTags">
                        <div class="user-panel-footer">
                            <div class="usertags">
                                <span class="st-custag"><span class="icon st-icon-tag prs"></span>[|Tags|]</span>
                                <input id="txtContactTagsCompany" class="tags-input" data-bind="valueUpdate: 'afterkeydown'" />
                            </div>
                        </div>
                        <div>
                            @{
    Html.RenderPartial("~/Views/Contact/_RecentPopularTagModel.cshtml");
                            }
                        </div>

                        </div>



                    </div>

            </div>


            <!--end of panel-->
            <div class="tabbable new-tabs cdp-tabs">
                <ul class="nav nav-tabs">
                    <li class="active" id="appTourContactTimeline"><a href="#timeline"><span class="icon st-icon-speech-bubble-center-2"></span>[|Timeline|]</a></li>
                    <li id="appTourContactInfo"><a href="#contactinfo"><span class="icon st-icon-user-3"></span>[|Contact Info|]</a></li>
                    <li id="appTourContactAttachements" data-bind="click:function(){ AttachmentViewModel().GetAttachments()}"><a href="#attachments"><span class="icon st-icon-cloud-add"></span>[|Attachments|]</a></li>
                    @*@if (Permissions.Where(s => s.Module == AppModules.CustomFields).Select(s => s.HasPermission).SingleOrDefault())
                        {*@
                    <li id="appTourContactCustomFields" data-bind="click:function(){ GetCustomFieldTabs()}"><a href="#customfields"><span class=""></span>[|Custom Fields|]</a></li>
                    @*}*@
                    <li id="contactsummary-pane"><a href="#contactsummary" data-bind="event:{click:summaryViewModel.getContactSummary}"><span class="icon st-icon-notes"></span>[|Contact Summary|]</a></li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" data-bind="with: TimeLineViewModel" id="timeline">
                        @{
    Html.RenderPartial("_TimeLineInfo");
                        }



                    </div>
                    <div class="tab-pane" id="contactinfo">
                        @{
    Html.RenderPartial("_CompanyDetailsContactInfo", new ViewDataDictionary { { "IsSendMail", IsSendMail } });
                        }
                    </div>
                    <div class="tab-pane" id="attachments" data-bind="with:AttachmentViewModel">
                        @{
    Html.RenderPartial("_Attachment", new ViewDataDictionary { { "page", "contacts" } });
                        }
                    </div>

                    @*@if (Permissions.Where(s => s.Module == AppModules.CustomFields).Select(s => s.HasPermission).SingleOrDefault())
                        {*@
                    <div class="tab-pane" data-bind="if:RenderCustomFields()==true" id="customfields">
                        @{
    Html.RenderPartial("_ViewCustomFields");
                        }
                    </div>
                    @*}*@
                    <div class="tab-pane" id="contactsummary">

                        @{
    Html.RenderPartial("_ContactSummary");
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="ct-other-panels">
            <!-- ko if: HideNavigation()===false-->
            <ul class="previous-next mbl">
                <li>
                    <!-- ko if: EnablePrevious()==true-->
                    <a href='@(Url.Action("PreviousContact","Contact"))'><i class="fui-arrow-left"></i> [|Previous|]</a>
                    <!--/ko-->
                    <!-- ko if: EnablePrevious()==false-->
                    <i class="fui-arrow-left"></i> [|Previous|]
                    <!--/ko-->
                </li>
                <li> - </li>
                <li>
                    <!-- ko if: EnableNext()==true-->
                    <a href="@(Url.Action("NextContact", "Contact"))">[|Next|] <i class="fui-arrow-right"></i></a>
                    <!--/ko-->
                    <!-- ko if: EnableNext()==false-->
                    [|Next|] <i class="fui-arrow-right"></i>
                    <!--/ko-->
                </li>
            </ul>
            <!--/ko-->
            @{
    Html.RenderPartial("_CompanyDetails");
            }
        </div>


        <div aria-hidden="false" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="editprofilepic" class="modal fade">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title">[|Edit Profile Picture |]</h4>
                    </div>
                    <div class="modal-body">
                        <div class="profile-img-upload mbl clearfix">
                            <figure>
                                <img id='contactimage' data-bind="attr:{src: Image().ImageContent?Image().ImageContent:'/img/NoImage_company.png'}" alt="profile picture" />
                            </figure>
                            <div class="uploadcontrol pln">
                                <div class="display-inline mtf upload-url">
                                    <label class="control-label ">[|URL|]</label>
                                    <div class="input-group">
                                        <input type="text" placeholder="Paste your web URL here" id="txtUploadProfileImage" data-bind="value:ProfileImage" class="form-control mbl display-inline">
                                        <a href="#" class="btn btn-m btn-primary input-group-btn" data-bind="click:uploadProfileImage">Upload</a>
                                    </div>
                                </div>
                                <div class="display-inline mtf">
                                    <label class="control-label ">&nbsp;</label>
                                    <div class="mhm">
                                        ([|or|])
                                    </div>
                                </div>
                                <div class="display-inline mtf">
                                    <label class="control-label">[|Choose picture from local drive|]</label>
                                    <input type="file" name="files" id="images" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div class="pull-left">
                            <a data-dismiss="" aria-hidden="" data-bind="click:function(){ InlineSaving(7)}" class="btn btn-lg btn-primary" id="btnSave"><span>Save</span></a>
                            <a href="javascript:void(0)" onclick="CloseTopInner(this)" data-dismiss="modal" aria-hidden="true" class="btn btn-lg">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>



    </div>
            <div class="modal fade" id="tourmodeltrigger" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Tour Delete Alert!</h4>
                        </div>
                        <div class="modal-body">
                            <div>
                                <span style="font-size:14px; color:#7b7b7b;font-family:arial,sans-serif;">
                                    Access denied. You do not have permission to delete this Tour.
                                </span>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="tourcomptrigger" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Tour Complete Alert!</h4>
                        </div>
                        <div class="modal-body">
                            <div>
                                <span style="font-size:14px; color:#7b7b7b;font-family:arial,sans-serif;">
                                    Access denied. You do not have permission to complete this Tour.
                                </span>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="actioncomptrigger" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Action Complete Alert!</h4>
                        </div>
                        <div class="modal-body">
                            <div>
                                <span style="font-size:14px; color:#7b7b7b;font-family:arial,sans-serif;">
                                    Access denied. You do not have permission to complete this Action.
                                </span>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="contactsummarymodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Contact Summary</h4>
                        </div>
                        <div class="modal-body">
                            <div id="cont-smy-dtls">

                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>

                }

@section Scripts{
<script>
    var dateformat = '@(DateFormat)';
    var currencyformat = '@(CurrencyFormat)';
    localStorage.removeItem("OpportunityView");
    window.onunload = function () { localStorage.removeItem("contactdetails"); };
    var contactid = "";
    var WEBSERVICE_URL = '@HttpContext.Current.Application["webservice_url"]';
    $('#325').css({ 'display': 'none' });
    localStorage.removeItem("OpportunityName");
    localStorage.removeItem("OpportunityID");
    var Activities = [];
    if ("@Permissions.Where(s => s.Module == AppModules.ContactActions).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({ ActivityID: 'Action', ActivityValue: "[|Actions|]" });
    if ("@Permissions.Where(s => s.Module == AppModules.ContactNotes).Select(s => s.HasPermission).SingleOrDefault()" == "True")Activities.push({ ActivityID: 'Note', ActivityValue: "[|Notes|]" });
    if ("@Permissions.Where(s => s.Module == AppModules.ContactTours).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({ ActivityID: 'Tour', ActivityValue: "[|Tours|]" });
    if ("@Permissions.Where(s => s.Module == AppModules.Campaigns).Select(s => s.HasPermission).SingleOrDefault()" == "True")Activities.push({ ActivityID: 'Campaign', ActivityValue: "[|Campaigns|]" });
    if ("@Permissions.Where(s => s.Module == AppModules.Forms).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({ ActivityID: 'Form', ActivityValue: "[|Forms|]" });
    Activities.push({ ActivityID: 'Contact', ActivityValue: "[|Profile Updates|]" });
    if ("@Permissions.Where(s => s.Module == AppModules.ContactRelationships).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({ ActivityID: 'Relationship', ActivityValue: "[|Relationships|]" });
    Activities.push({ ActivityID: 'Attachment', ActivityValue: "[|Attachments|]" });
    if ("@Permissions.Where(s => s.Module == AppModules.SendMail).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({ ActivityID: 'Email', ActivityValue: "[|Emails|]" });
    if ("@Permissions.Where(s => s.Module == AppModules.SendText).Select(s => s.HasPermission).SingleOrDefault()" == "True") Activities.push({ ActivityID: 'Text', ActivityValue: "[|Text|]" });
    Activities.push({ ActivityID: 'LifeCycle', ActivityValue: "[|Life Cycle|]" });
    Activities.push({ ActivityID: 'LeadSource', ActivityValue: "[|Lead Source|]" });
    Activities.push({ ActivityID: 'Web Visit', ActivityValue: "[|Web Visit|]" });

    function createCookie(name, value, days) {
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            var expires = "; expires=" + date.toGMTString();
        } else var expires = "";
        document.cookie = escape(name) + "=" + escape(value) + expires + "; path=/";
    }
    createCookie("dateformat",dateformat,1);
    createCookie("currencyformat",currencyformat,1);
    createCookie("log", true, 1);

    $(document).ready(function () {
        // pageLoader();

        var tags = [];
        var PersonDetails = @(Html.Raw(Json.Encode(Model)));
        contactid = PersonDetails.ContactID;
        var BASE_URL = '@Url.Content("~/Contact/")';
        var Opportunity_Url = '@Url.Content("~/Opportunities/")';
        var Communication_Url = '@Url.Content("~/Communication/")';
        var mailgunPublicKey = '@System.Configuration.ConfigurationManager.AppSettings["mailgun_apikey"]';
        var WEBSERVICE_URL = '@HttpContext.Current.Application["webservice_url"]';
        var itemsPerPage = '@(ItemsPerPage)';
        var IsPeople = readCookie("IsPeople");
        if(IsPeople == "1")
            $('#menuItem236').css({ 'display': 'none' });

        MailGunValidater = function (id) {
            var emailValidator = new EmailValidate(id, mailgunPublicKey);
                emailValidator.validate(id);
        }
        viewModel1 = new personDetailsViewModel(PersonDetails, BASE_URL,Communication_Url,Activities,Opportunity_Url,WEBSERVICE_URL,itemsPerPage);   //viewModel1 should be accessible to _GooglePicker.cshtml
        ko.applyBindings(viewModel1, document.getElementById("companyView"));



        $(':checkbox').on('change', function() {
            $(this).triggerHandler('click');
        });

        var contactIndex = @(Session["contactindex"]);
        var totalHits = @(Session["TotalHits"]);
        viewModel1.ContactIndex(contactIndex);
        viewModel1.TotalHits(totalHits);

        var IMAGE_HOSTEDPATH='@HttpContext.Current.Application["image_hostedpath"]';
        var primaryEmail;
        $.each(viewModel1.Emails(), function (index, Email) {
            if(Email.IsPrimary()==true)
            {
                primaryEmail=Email;
            }
        });
        var primaryPhone;
        $.each(viewModel1.Phones(), function (index, Phone) {
            if(Phone.IsPrimary()==true)
            {
                primaryPhone=Phone;
            }
        });

        //if(PersonDetails.Image!=null)
        //{
        //    if(PersonDetails.Image.ImageContent!=null && PersonDetails.Image.ImageContent!="null" && PersonDetails.Image.ImageContent!="" && typeof(PersonDetails.Image.ImageContent)!="undefined")
        //        $("#imgProfileImage").attr('src',PersonDetails.Image.ImageContent);
        //}
        var value = viewModel1.ContactID() + "|" + viewModel1.CompanyName();


        if(primaryEmail!=null)
        {
            var value = viewModel1.ContactID() + "|" + viewModel1.CompanyName() + "|" + null+"|"+primaryEmail.EmailID()+"|"+primaryEmail.EmailId()+"|"+viewModel1.DoNotEmail()+"|" + primaryEmail.EmailStatusValue();
        }
        if(primaryPhone!=null&&primaryEmail!=null)
            var value = viewModel1.ContactID() + "|" + viewModel1.CompanyName() + "|" + null+"|"+primaryEmail.EmailID()+"|"
                +primaryEmail.EmailId()+"|"+viewModel1.DoNotEmail()+"|" + primaryEmail.EmailStatusValue()+"|"+primaryPhone.ContactPhoneNumberID()+"|"+primaryPhone.Number() +"|"+primaryPhone.PhoneTypeName();

        //if(primaryEmail==null&&primaryPhone!=null)
        //    var value = selfDetails.ContactID() + "|" + selfDetails.CompanyName() + "|" + null+"|"+null+"|"
        //       +null+"|"+"false"+"|"+primaryPhone.ContactPhoneNumberID()+"|"+primaryPhone.Number();

        if(primaryEmail==null&&primaryPhone!=null)
            var value = viewModel1.ContactID() + "|" + viewModel1.CompanyName() + "|" + viewModel1.CompanyName()+"|"+null+"|"
               +null+"|"+"false"+"|"+null+"|"+primaryPhone.ContactPhoneNumberID()+"|"+primaryPhone.Number()+"|"+primaryPhone.PhoneTypeName();

        localStorage.setItem("contactdetails", value);
        selfDetails.contactdetails(value);
        var BASE_URL = '@Url.Content("~/Contact/")';
        var WEBSERVICE_URL = '@HttpContext.Current.Application["webservice_url"]';
        var accountId = '@Thread.CurrentPrincipal.Identity.ToAccountID()';

        $('#txtContactTagsCompany').tagsInput({
            onAddTag: function (value,uid) {

                var tag = $(viewModel1.TagsList()).filter(function (index, tagItem) {
                    if((typeof tagItem.LeadScoreTag == 'function' ? tagItem.LeadScoreTag():tagItem.LeadScoreTag) == true){
                        return ((typeof tagItem.TagName == 'function'?tagItem.TagName():tagItem.TagName).toString().toLowerCase().replace("*","")) == (value.toString().toLowerCase().replace(" *",""));
                    }
                    else{
                        return (typeof tagItem.TagName == 'function'?tagItem.TagName():tagItem.TagName).toString().toLowerCase() == value.toString().toLowerCase();
                    }
                })[0];

                if(tag == undefined){
                    $.ajax({
                        url: BASE_URL + 'AddTag',
                        type: 'post',
                        dataType: 'json',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ 'tagName': value, 'contactId': viewModel1.ContactID(),'tagId':uid})
                    }).then(function (response) {            
                        var filter = $.Deferred()            
                        if (response.success) {                
                            filter.resolve(response)            
                        } else {                
                            filter.reject(response.error)            
                        }            
                        return filter.promise()        
                    }).done(function (data) {
                        if (data.success === false)
                        {
                            self.saveText('Save');
                            $('.overlay').remove();
                            $('body').append('<div class="alert alert-error success-msg"><a class="close" data-dismiss="alert" href="#" aria-hidden="true">&times;</a> ' + data.response + '</div>');
                        }
                        viewModel1.TagsList.push(data.response);  //() after TagsList
                    }).fail(function (error) {                                 
                        notifyError(error);        
                    })
                }

            },
            onRemoveTag: function (value) {

                var tag = $(viewModel1.TagsList()).filter(function (index, tagItem) {
                    if((typeof tagItem.LeadScoreTag == 'function' ? tagItem.LeadScoreTag():tagItem.LeadScoreTag) == true){
                        return ((typeof tagItem.TagName == 'function'?tagItem.TagName():tagItem.TagName).toString().toLowerCase().replace("*","")) == (value.toString().toLowerCase().replace(" *",""));
                    }
                    else{
                        return (typeof tagItem.TagName == 'function'?tagItem.TagName():tagItem.TagName).toString().toLowerCase() == value.toString().toLowerCase();
                    }
                })[0];

                var result = RemoveTagFunction(value,(typeof tag.Id == 'function'?tag.Id():tag.Id),viewModel1.ContactID());

                viewModel1.TagsList.remove(function (tag) {
                    return (typeof tag.TagName == 'function' ? tag.TagName() : tag.TagName) === value;
                });


                if(result == true){

                    if (viewModel1.hasOwnProperty('PopularTags') && viewModel1.PopularTags() != null) {
                        var popularTagfilter = ko.utils.arrayFilter(viewModel1.PopularTags(), function (Tag, index) {
                            if ( (typeof Tag.TagName == 'function' ? Tag.TagName() : Tag.TagName) === value) {
                                Tag.IsSelected = false;
                                $('#populartag' + (index + 1)).parent('.checked').removeClass('checked');
                            }
                            return (typeof Tag.TagName == 'function' ? Tag.TagName() : Tag.TagName) === value;
                        });

                        var recentTagfilter = ko.utils.arrayFilter(viewModel1.RecentTags(), function (Tag, index) {
                            if ((typeof Tag.TagName == 'function' ? Tag.TagName() : Tag.TagName) === value) {
                                Tag.IsSelected = false;
                                $('#recenttag' + (index + 1)).parent('.checked').removeClass('checked');
                            }
                            return (typeof Tag.TagName == 'function' ? Tag.TagName() : Tag.TagName) === value;
                        });
                    }
                    viewModel1.TagsList.remove(function (tag) {
                        return (typeof tag.TagName == 'function' ? tag.TagName() : tag.TagName) === value;
                    });

                }


            },

        });

        if (viewModel1.TagsList() != null) {
            $.each(viewModel1.TagsList(), function (index, tagItem) {
                var tagname = tagItem.LeadScoreTag() == true? tagItem.TagName()+" *":tagItem.TagName();
                $("#txtContactTagsCompany").addTag(tagname,{ UID: tagItem.Id() });
            });
        }

        function RemoveTagFunction(value,uid,contactid){
            $.ajax({
                url: BASE_URL + 'RemoveTag',
                type: 'post',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ 'tagName': value,'tagId':uid == undefined?0:uid, 'contactId': viewModel1.ContactID() })
            }).then(function (response) {            
                var filter = $.Deferred()            
                if (response.success) {                
                    filter.resolve(response)            
                } else {                
                    filter.reject(response.error)            
                }           
                return filter.promise()        
            }).done(function (data) {
                if (data.success === false)
                {
                    self.saveText('Save');
                    $('.overlay').remove();
                    $('body').append('<div class="alert alert-error success-msg"><a class="close" data-dismiss="alert" href="#" aria-hidden="true">&times;</a> ' + data.response + '</div>');
                }     
            }).fail(function (error) {                                
                // notifyError(error);        
            })
            return true;
        }



        var typewatch = (function(){
            var timer = 0;
            return function(callback, ms){
                clearTimeout (timer);
                timer = setTimeout(callback, ms);
            }
        })();

        //$("#txtContactTagsCompany_tag").kendoAutoComplete([]);
        $("#txtContactTagsCompany_tag").kendoAutoComplete({
            minLength: 1,
            placeholder: "Type a tag name",
            dataTextField: "TagName",
            select: autocomplete_select
        });

        var tagNames = $("#txtContactTagsCompany_tag");
        tagNames.bind('keydown keypress', function() {
            typewatch(function() {
                var authToken = readCookie("accessToken");
                $.ajax({
                    url: WEBSERVICE_URL + "/Tag/Names",
                    type: 'get',
                    dataType: 'json',
                    data:{ 'query': tagNames.val()},
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization", "Bearer " + authToken);
                    },
                    success: function(tagsData){
                        if (tagsData.Tags.length > 0) {
                            tags = tagsData.Tags;
                        }

                        var autocomplete = $("#txtContactTagsCompany_tag").data("kendoAutoComplete");
                        autocomplete.dataSource.data(tagsData.Tags);
                    },
                    error: function (response) { 
                        notifyError(response.responseText);            
                    }
                });
            }, 500);
        });

        function autocomplete_select(e) {
            var item = e.item;
            var dataItem = this.dataItem(e.item);

            var text = item.text();

            var tagviewmodel = $(tagsViewModel).filter(function () {
                return this.TagId.toString().toLowerCase() === dataItem.TagID.toString().toLowerCase();
            })[0];


            var tag = $(viewModel1.TagsList()).filter(function (index, tagItem) {
                if(tagItem.LeadScoreTag() == true){
                    return ((tagItem.TagName()).toString().toLowerCase().replace("*","")) == (text.toString().toLowerCase());
                }
                else
                    return tagItem.Id() == dataItem.TagID;
            })[0];

            if (!$("#txtContactTagsCompany").tagExist(text) && tagviewmodel == undefined && tag == undefined) {
                $("#txtContactTagsCompany").addTag(text,{ UID: dataItem.TagID });
            }
            e.preventDefault();
        }

        var recentJs = new RecentPopular(viewModel1,"txtContactTagsCompany");
    });
    function copyContact() {
        window.location.href = "/copycompany?contactId=" + contactid + "&contactType=" +2;
    }

    function deleteContacts(){
        alertifyReset("Delete Contact", "Cancel");
        alertify.confirm("[|Are you sure you want to delete this contact|]?", function (e) {
            if (e) {
                varDeleteURL = "/Contact/DeleteContact?id=" + contactid;
                jQuery.support.cors = true;
                $.ajax({
                    url: varDeleteURL,
                    type: 'post',
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8"
                }).then(function (response) {            
                    var filter = $.Deferred()            
                    if (response.success) {                
                        filter.resolve(response)            
                    } else {                
                        filter.reject(response.error)            
                    }            
                    return filter.promise()        
                }).done(function (data) {
                    notifySuccess("[|Successfully deleted the contact|]");
                    setTimeout(
                        function()
                        {
                            window.location.href = "/contacts"
                        },setTimeOutTimer);        
                }).fail(function (error) {                                
                    notifyError(error);        
                })
            }
            else {
                notifyError("[|You've clicked Cancel|]");
            }
        });
    }

    var SyncContact = function(){
        var BASE_CONTACT_URL = '@Url.Content("~/Contact/")';
        pageLoader();
        $.ajax({
            url: BASE_CONTACT_URL + 'updatesocialprofiles',
            type: 'get',
            dataType: 'json',
            contentType: "application/json; charset=utf-8",
            data : { 'contactId' : contactid, 'contactType' : 2 }
        }).then(function (response) {            
            var filter = $.Deferred()            
            if (response.success) {                
                filter.resolve(response)            
            } else {                
                filter.reject(response.error)            
            }            
            return filter.promise()        
        }).done(function (data) {
            notifySuccess("[|Successfully updated the Contact|]");

            setTimeout(function () {
                window.location.reload();
            }, setTimeOutTimer);
        }).fail(function (error) {                                
            notifyError(error);        
        })
    }

    function ViewContactSummary(e) {
        var details =  $(e).attr("data-content");
        document.getElementById('cont-smy-dtls').innerText = details
        // $('#contactsummarymodal').modal('toggle');
    }

    function DeleteContactNote(noteID) {
        console.log(noteID);
        var url = '@Url.Content("~/Contact/")';
        var note = "GetNoteContactsCount";
        $.ajax({
            url: url + note,
            type: 'post',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ 'noteId': noteID })
        }).then(function (response) {
            var filter = $.Deferred()
            if (response.success) {
                filter.resolve(response)
            } else {
                filter.reject(response.error)
            }
            return filter.promise()
        }).done(function (data) {
            if (data.response.Count == 1 || data.response.SelectAll == true) {
                DeleteNoteConfirm("Delete Note", "Cancel", "[|Are you sure you want to delete this Note|]?", noteID);
            }
            else {
                DeleteNoteConfirm("Delete Note", "Cancel", "[|Note added to more than one Contact. Deleting this Note will remove it from all associated Contacts. Are you sure you want to delete?|]", noteID);
            }
        }).fail(function (error) {
            notifyError(error);
        })

    }

    function DeleteNoteConfirm(okText, cancelText, confirmMessage, noteId) {
        alertifyReset(okText, cancelText);
        alertify.confirm(confirmMessage, function (e) {

            if (e) {
                var url = '@Url.Content("~/Contact/")';
                var actionUrl = url + "DeleteNote";
                $.ajax({
                    url: actionUrl,
                    type: 'post',
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ 'noteId': noteId, 'contactId': 0 })
                }).then(function (response) {
                    var filter = $.Deferred()
                    if (response.success) {
                        filter.resolve(response)
                    } else {
                        filter.reject(response.error)
                    }
                    return filter.promise()
                }).done(function (data) {
                    $('.success-msg').remove();
                    notifySuccess('[|Successfully deleted Note|]');
                    setTimeout(
                        function () {
                            window.location.href = document.URL;
                        }, setTimeOutTimer);
                }).fail(function (error) {
                    notifyError(error);
                })
            }
            else {
                notifyError("[|You've clicked Cancel|]");
            }
        });
    }
</script>

}

